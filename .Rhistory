event_type = device.event.query$event_type,
event_location = device.event.query$event_location,
event_description = event.text.vector)
}
View(device.event.query)
View(temp)
device.event.data <- rbind(device.event.data,temp)
device.event.data <- data.frame(device = "",
date_of_event = "",
event_type = "",
event_location ="",
event_description = "")
device.event.data <- rbind(device.event.data,temp)
View(device.event.data)
queryDeviceData <- function(drug,
start.date = "1998-01-01",
end.date = as.character(Sys.Date()),
drug.device.table = readRDS("drug.device.table.rds")){
companions <- unique(drug.device.table$Device.Trade.Name[which(drug.device.table$Drug.Trade.Name == tolower(drug))])
device.event.data <- data.frame(device = "",
date_of_event = "",
event_type = "",
event_location ="",
event_description = "")
for(i in seq_along(companions)){
is.this.error <- try(device.event.query <- fromJSON(paste0('https://api.fda.gov/device/event.json?search=device.brand_name:',companions[i],'&limit=100'))$results)
if(is.this.error != 'Error in open.connection(con, \"rb\") : HTTP error 400.\n'){
event.text.vector <- sapply((sapply(device.event.query$mdr_text,function(x) return(x$text))),function(x) return(x[1]))
temp <- data.frame(device = companions[i],
date_of_event = device.event.query$date_of_event,
event_type = device.event.query$event_type,
event_location = device.event.query$event_location,
event_description = event.text.vector)
device.event.data <- rbind(device.event.data,temp)
}
}
if(nrow(device.event.data == 1) & device.event.data$device[1] == ""){
return(FALSE) # This means error! :this function should be able to let json errors go and also return a FLAG if no information is found in API query
}else{
device.event.data <- device.event.data[-1,] # remove the first row
return(device.event.data)
}
} # End of queryDeviceData
x <- queryDeviceData(drug = "herceptin")
companions <- unique(drug.device.table$Device.Trade.Name[which(drug.device.table$Drug.Trade.Name == tolower(drug))])
device.event.data <- data.frame(device = "",
date_of_event = "",
event_type = "",
event_location ="",
event_description = "")
for(i in seq_along(companions)){
is.this.error <- try(device.event.query <- fromJSON(paste0('https://api.fda.gov/device/event.json?search=device.brand_name:',companions[i],'&limit=100'))$results)
if(is.this.error != 'Error in open.connection(con, \"rb\") : HTTP error 400.\n'){
event.text.vector <- sapply((sapply(device.event.query$mdr_text,function(x) return(x$text))),function(x) return(x[1]))
temp <- data.frame(device = companions[i],
date_of_event = device.event.query$date_of_event,
event_type = device.event.query$event_type,
event_location = device.event.query$event_location,
event_description = event.text.vector)
device.event.data <- rbind(device.event.data,temp)
}
}
if(nrow(device.event.data == 1) & device.event.data$device[1] == ""){
return(FALSE) # This means error! :this function should be able to let json errors go and also return a FLAG if no information is found in API query
}else{
device.event.data <- device.event.data[-1,] # remove the first row
return(device.event.data)
}
companions <- unique(drug.device.table$Device.Trade.Name[which(drug.device.table$Drug.Trade.Name == tolower(drug))])
device.event.data <- data.frame(device = "",
date_of_event = "",
event_type = "",
event_location ="",
event_description = "")
for(i in seq_along(companions)){
is.this.error <- try(device.event.query <- fromJSON(paste0('https://api.fda.gov/device/event.json?search=device.brand_name:',companions[i],'&limit=100'))$results)
if(is.this.error != 'Error in open.connection(con, \"rb\") : HTTP error 400.\n'){
event.text.vector <- sapply((sapply(device.event.query$mdr_text,function(x) return(x$text))),function(x) return(x[1]))
temp <- data.frame(device = companions[i],
date_of_event = device.event.query$date_of_event,
event_type = device.event.query$event_type,
event_location = device.event.query$event_location,
event_description = event.text.vector)
device.event.data <- rbind(device.event.data,temp)
}
}
nrow(device.event.data == 1)
nrow(device.event.data)
(device.event.data$device[1] == "")
queryDeviceData <- function(drug,
start.date = "1998-01-01",
end.date = as.character(Sys.Date()),
drug.device.table = readRDS("drug.device.table.rds")){
companions <- unique(drug.device.table$Device.Trade.Name[which(drug.device.table$Drug.Trade.Name == tolower(drug))])
device.event.data <- data.frame(device = "",
date_of_event = "",
event_type = "",
event_location ="",
event_description = "")
for(i in seq_along(companions)){
is.this.error <- try(device.event.query <- fromJSON(paste0('https://api.fda.gov/device/event.json?search=device.brand_name:',companions[i],'&limit=100'))$results)
if(is.this.error != 'Error in open.connection(con, \"rb\") : HTTP error 400.\n'){
event.text.vector <- sapply((sapply(device.event.query$mdr_text,function(x) return(x$text))),function(x) return(x[1]))
temp <- data.frame(device = companions[i],
date_of_event = device.event.query$date_of_event,
event_type = device.event.query$event_type,
event_location = device.event.query$event_location,
event_description = event.text.vector)
device.event.data <- rbind(device.event.data,temp)
}
}
if((nrow(device.event.data) == 1)){
return(FALSE) # This means error! :this function should be able to let json errors go and also return a FLAG if no information is found in API query
}else{
device.event.data <- device.event.data[-1,] # remove the first row
return(device.event.data)
}
} # End of queryDeviceData
x <- queryDeviceData(drug = "herceptin")
View(x)
drug.device.data <- queryDeviceData(drug = drug,
start.date = start.date,
end.date = end.date)
View(drug.device.data)
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))
drug.data <- yearlyPRR(event,
drug,
start.date,
end.date)
drug.data <- yearlyPRR(event,drug)
event = "NAUSEA"
drug.data <- yearlyPRR(event,
drug,
start.date,
end.date)
drug.data <- yearlyPRR(event,
drug)
View(drug.data)
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))
drug.data.temp <- dplyr::filter(drug.data,end.year >= start.date, end.date >= end.year)
start.date = "1998-01-01"
end.date = as.character(Sys.Date())
drug.data.temp <- dplyr::filter(drug.data,end.year >= start.date, end.date >= end.year)
View(drug.data.temp)
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))
View(drug.device.data)
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,aes(x = date_of_event, y= mean(drug.data.temp$PRR)))
drug.device.data$date_of_event <- date(format(drug.device.data$date_of_event ))
drug.device.data$date_of_event
View(drug.device.data)
queryDeviceData <- function(drug,
start.date = "1998-01-01",
end.date = as.character(Sys.Date()),
drug.device.table = readRDS("drug.device.table.rds")){
companions <- unique(drug.device.table$Device.Trade.Name[which(drug.device.table$Drug.Trade.Name == tolower(drug))])
device.event.data <- data.frame(device = "",
date_of_event = "",
event_type = "",
event_location ="",
event_description = "")
for(i in seq_along(companions)){
is.this.error <- try(device.event.query <- fromJSON(paste0('https://api.fda.gov/device/event.json?search=device.brand_name:',companions[i],'&limit=100'))$results)
if(is.this.error != 'Error in open.connection(con, \"rb\") : HTTP error 400.\n'){
event.text.vector <- sapply((sapply(device.event.query$mdr_text,function(x) return(x$text))),function(x) return(x[1]))
temp <- data.frame(device = companions[i],
date_of_event = device.event.query$date_of_event,
event_type = device.event.query$event_type,
event_location = device.event.query$event_location,
event_description = event.text.vector)
device.event.data <- rbind(device.event.data,temp)
}
}
if((nrow(device.event.data) == 1)){
return(FALSE) # This means error! :this function should be able to let json errors go and also return a FLAG if no information is found in API query
}else{
device.event.data <- device.event.data[-1,] # remove the first row
# Convert all features to chr:
for(j in 1:ncol(device.event.data)){
device.event.data[,j] <- as.character(device.event.data[,i])
}
return(device.event.data)
}
} # End of queryDeviceData
drug.device.data <- queryDeviceData(drug = drug,
start.date = start.date,
end.date = end.date)
queryDeviceData <- function(drug,
start.date = "1998-01-01",
end.date = as.character(Sys.Date()),
drug.device.table = readRDS("drug.device.table.rds")){
companions <- unique(drug.device.table$Device.Trade.Name[which(drug.device.table$Drug.Trade.Name == tolower(drug))])
device.event.data <- data.frame(device = "",
date_of_event = "",
event_type = "",
event_location ="",
event_description = "")
for(i in seq_along(companions)){
is.this.error <- try(device.event.query <- fromJSON(paste0('https://api.fda.gov/device/event.json?search=device.brand_name:',companions[i],'&limit=100'))$results)
if(is.this.error != 'Error in open.connection(con, \"rb\") : HTTP error 400.\n'){
event.text.vector <- sapply((sapply(device.event.query$mdr_text,function(x) return(x$text))),function(x) return(x[1]))
temp <- data.frame(device = companions[i],
date_of_event = device.event.query$date_of_event,
event_type = device.event.query$event_type,
event_location = device.event.query$event_location,
event_description = event.text.vector)
device.event.data <- rbind(device.event.data,temp)
}
}
if((nrow(device.event.data) == 1)){
return(FALSE) # This means error! :this function should be able to let json errors go and also return a FLAG if no information is found in API query
}else{
device.event.data <- device.event.data[-1,] # remove the first row
# Convert all features to chr:
for(j in 1:ncol(device.event.data)){
device.event.data[,j] <- as.character(device.event.data[,j])
}
return(device.event.data)
}
} # End of queryDeviceData
drug.device.data <- queryDeviceData(drug = drug,
start.date = start.date,
end.date = end.date)
# Convert the date feature to proper date
drug.device.data$date_of_event <- date(format(drug.device.data$date_of_event ))
drug.device.data$date_of_event[1]
year <- substr(drug.device.data$date_of_event[1],1,4)
month <- substr(drug.device.data$date_of_event[1],5,6)
drug.device.data$date_of_event
ymd.date <- paste(year,month,day,sep = "-")
year <- substr(drug.device.data$date_of_event[1],1,4)
month <- substr(drug.device.data$date_of_event[1],5,6)
day <- substr(drug.device.data$date_of_event[1],7,8)
ymd.date <- paste(year,month,day,sep = "-")
for(k in 1:nrow(drug.device.data)){
year <- substr(drug.device.data$date_of_event[k],1,4)
month <- substr(drug.device.data$date_of_event[k],5,6)
day <- substr(drug.device.data$date_of_event[k],7,8)
ymd.date <- paste(year,month,day,sep = "-")
drug.device.data$date_of_event[k] <- date(format(ymd.date))
}
View(drug.device.data)
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,aes(x = date_of_event, y= mean(drug.data.temp$PRR)))
for(k in 1:nrow(drug.device.data)){
year <- substr(drug.device.data$date_of_event[k],1,4)
month <- substr(drug.device.data$date_of_event[k],5,6)
day <- substr(drug.device.data$date_of_event[k],7,8)
ymd.date <- paste(year,month,day,sep = "-")
drug.device.data$date_of_event[k] <- as.Date(format(ymd.date))
}
drug.device.data <- queryDeviceData(drug = drug,
start.date = start.date,
end.date = end.date)
for(k in 1:nrow(drug.device.data)){
year <- substr(drug.device.data$date_of_event[k],1,4)
month <- substr(drug.device.data$date_of_event[k],5,6)
day <- substr(drug.device.data$date_of_event[k],7,8)
ymd.date <- paste(year,month,day,sep = "-")
drug.device.data$date_of_event[k] <- as.Date(format(ymd.date))
}
drug.device.data <- queryDeviceData(drug = drug,
start.date = start.date,
end.date = end.date)
k = 1
year <- substr(drug.device.data$date_of_event[k],1,4)
month <- substr(drug.device.data$date_of_event[k],5,6)
day <- substr(drug.device.data$date_of_event[k],7,8)
ymd.date <- paste(year,month,day,sep = "-")
as.Date(format(ymd.date))
as.Date(ymd.date)
as.POSIXct.date(ymd.date)
class(as.Date(ymd.date))
# Convert the date feature to proper date
for(k in 1:nrow(drug.device.data)){
year <- substr(drug.device.data$date_of_event[k],1,4)
month <- substr(drug.device.data$date_of_event[k],5,6)
day <- substr(drug.device.data$date_of_event[k],7,8)
ymd.date <- paste(year,month,day,sep = "-")
drug.device.data$date_of_event[k] <- as.Date(ymd.date)
}
drug.device.data <- queryDeviceData(drug = drug,
start.date = start.date,
end.date = end.date)
View(device.event.data)
# Convert the date feature to proper date
for(k in 1:nrow(drug.device.data)){
year <- substr(drug.device.data$date_of_event[k],1,4)
month <- substr(drug.device.data$date_of_event[k],5,6)
day <- substr(drug.device.data$date_of_event[k],7,8)
ymd.date <- paste(year,month,day,sep = "-")
drug.device.data$date_of_event[k] <- ymd.date
}
drug.device.data$date_of_event <- date(format(drug.device.data$date_of_event))
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,aes(x = date_of_event, y= mean(drug.data.temp$PRR)))
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 3,aes(x = date_of_event, y= mean(drug.data.temp$PRR)))
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 6,aes(x = date_of_event, y= mean(drug.data.temp$PRR)))
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 12,aes(x = date_of_event, y= mean(drug.data.temp$PRR)))
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 45,aes(x = date_of_event, y= mean(drug.data.temp$PRR)))
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 4,aes(x = date_of_event, y= mean(drug.data.temp$PRR)))
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 17,aes(x = date_of_event, y= mean(drug.data.temp$PRR)))
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 17,size = 3 ,aes(x = date_of_event, y= mean(drug.data.temp$PRR)))
sd(drug.data.temp$PRR)
jitter <- rnorm(nrow(drug.device.data), mean = mean(drug.data.temp$PRR), sd = sd(drug.data.temp$PRR)/2 )
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 17,size = 8,color =red,aes(x = date_of_event, y= jitter))
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 17,size = 8,color ="red",aes(x = date_of_event, y= jitter))
jitter <- rnorm(nrow(drug.device.data), mean = mean(drug.data.temp$PRR), sd = sd(drug.data.temp$PRR) )
ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 17,size = 8,color ="red",aes(x = date_of_event, y= jitter))
colnames(drug.device.data)
p <- ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 17,size = 8,color ="red",
aes(x = date_of_event, y= jitter,
text=sprintf("Device: %s<br>Date of event: %s<br>Event type: %s<br>Event location: %s<br>Event description: %s", a, b,c,d,e)))
ggplotly(p)
a <- drug.device.data$device
b <- drug.device.data$date_of_event
c <- drug.device.data$event_type
d <- drug.device.data$event_location
e <- drug.device.data$event_description
p <- ggplot(data = drug.data.temp , aes(x = end.year , y = PRR))+
geom_line(colour = "purple", size = 2)+
geom_point(colour = "navy", size = 4)+
labs(x="Date", y = "PRR", title = paste0("Yearly PRR of adverse event ",gsub("\\+"," ",unique(drug.data$event))," for drug ",unique(drug.data$drug)))+
theme(panel.background=element_rect(fill = "white",colour = "black"),
panel.border=element_rect(colour = "black", fill = NA),
plot.title = element_text(hjust = 0.5, face = "bold",size = 15),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"))+
geom_point(data = drug.device.data,shape= 17,size = 8,color ="red",
aes(x = date_of_event, y= jitter,
text=sprintf("Device: %s<br>Date of event: %s<br>Event type: %s<br>Event location: %s<br>Event description: %s", a, b,c,d,e)))
ggplotly(p)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
global.values$drug.data <- yearlyPRR("FATIGUE",
"Herceptin")
drug.data <- yearlyPRR("FATIGUE",
"Herceptin")
runApp()
runApp()
drug.data.temp <- dplyr::filter(drug.data,end.year >= start.date, end.date >= end.year)
runApp()
drug.data.temp <- dplyr::filter(drug.data,end.year >= start.date, end.date >= end.year)
runApp()
runApp()
runApp()
runApp()
Q
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
